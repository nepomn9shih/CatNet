{"version":3,"sources":["utils/validators.js","components/FormsControls/FormsControls.js","components/Login/Login.js","components/Login/LoginContainer.js"],"names":["requiredField","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength","FormControl","input","meta","props","child","hasError","touched","error","className","children","Textarea","restProps","Input","CheckBox","type","maxLength20","minLength4","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","name","placeholder","component","validate","Login","loginThunkCreator","isAuth","to","formData","email","password","rememberMe","mapDispatchToProps","logoutThunkCreator","connect","state","auth"],"mappings":"wGACA,sGAAO,IAAMA,EAAgB,SAACC,GAC1B,IAAIA,EACJ,MAAO,iBAGEC,EAAmB,SAACC,GAC9B,OAAQ,SAACF,GACJ,GAAIA,GAAUA,EAAMG,OAASD,EAAY,MAAM,iBAAN,OAAwBA,EAAxB,cAKpCE,EAAmB,SAACC,GAC7B,OAAQ,SAACL,GACJ,GAAIA,GAAUA,EAAMG,OAASE,EAAY,MAAM,iBAAN,OAAwBA,EAAxB,e,kKCZ5CC,G,YAAc,SAAC,GAAmC,EAAlCC,MAAmC,IAA5BC,EAA2B,EAA3BA,KAAgBC,GAAW,EAArBC,MAAqB,yCAE9CC,EAAWH,EAAKI,SAAWJ,EAAKK,MAEtC,OACI,sBAAKC,UAAW,eAAiBH,EAAW,SAAW,IAAvD,UACI,8BACIF,EAAMM,WAETJ,GAAY,qCAAQH,EAAKK,MAAb,YAKZG,EAAW,SAACP,GAAW,IACzBF,EAAoCE,EAApCF,MAAuBU,GAAaR,EAA7BD,KAA6BC,EAAvBC,MADW,YACYD,EADZ,2BAE/B,OAAO,cAACH,EAAD,2BAAiBG,GAAjB,aAAwB,oDAAcF,GAAWU,QAG/CC,EAAQ,SAACT,GAAW,IACtBF,EAAoCE,EAApCF,MAAuBU,GAAaR,EAA7BD,KAA6BC,EAAvBC,MADQ,YACeD,EADf,2BAE5B,OAAO,cAACH,EAAD,2BAAiBG,GAAjB,aAAwB,iDAAWF,GAAWU,QAG5CE,EAAW,SAACV,GAAW,IACzBF,EAAoCE,EAApCF,MAAuBU,GAAaR,EAA7BD,KAA6BC,EAAvBC,MADW,YACYD,EADZ,2BAE/B,OAAO,cAACH,EAAD,2BAAiBG,GAAjB,aAAwB,+CAAOW,KAAK,YAAeb,GAAWU,S,2ICHnEI,EAAcpB,YAAiB,IAC/BqB,EAAalB,YAAiB,GAiC9BmB,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EA/BL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcb,EAAW,EAAXA,MAC9B,OACI,uBAAMc,SAAUD,EAAhB,UACE,8BACE,cAACE,EAAA,EAAD,CACEC,KAAM,QACNC,YAAa,QACbC,UAAWb,IACXc,SAAU,CAACjC,IAAesB,OAG9B,8BACE,cAACO,EAAA,EAAD,CACEC,KAAM,WACNT,KAAM,WACNU,YAAa,WACbC,UAAWb,IACXc,SAAU,CAACjC,IAAesB,EAAaC,OAG1CT,GAAS,qBAAKC,UAAU,mBAAf,SAAmCD,IAC7C,gCACE,cAACe,EAAA,EAAD,CAAOC,KAAM,aAAcT,KAAM,WAAYW,UAAWb,MAD1D,kBAGA,8BACE,wBAAQJ,UAAU,4BAAlB,2BAQGmB,EAxDD,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,kBAMd,OAN6C,EAAZC,OAOxB,cAAC,IAAD,CAAUC,GAAI,aAGrB,qBAAKtB,UAAU,6BAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,uCACA,cAACS,EAAD,CAAgBI,SAXT,SAACU,GAChBH,EAAkBG,EAASC,MAAOD,EAASE,SAAUF,EAASG,qBCE5DC,EAAqB,CACzBP,sBACAQ,wBAGaC,uBAXS,SAACC,GACvB,MAAO,CACLT,OAAQS,EAAMC,KAAKV,UASiBM,EAAzBE,CAA6CV","file":"static/js/7.77b3f194.chunk.js","sourcesContent":["\r\nexport const requiredField = (value) => {\r\n    if (value) return undefined\r\n    return \"error message\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n   return ((value) => {\r\n        if (value && (value.length > maxLength)) return `Max length is ${maxLength} symbols`\r\n        return undefined\r\n    })\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => {\r\n    return ((value) => {\r\n         if (value && (value.length < minLength)) return `Max length is ${minLength} symbols`\r\n         return undefined\r\n     })\r\n }","import React from \"react\";\r\nimport './FormsControls.css'\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    \r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={\"formControl\" + (hasError ? \" error\" : \"\")}>\r\n            <div>\r\n               {props.children}\r\n            </div>\r\n            {hasError && <span>\"{meta.error}\"</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>   \r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>   \r\n}\r\n\r\nexport const CheckBox = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input type=\"checkbox\" {...input} {...restProps}/></FormControl>   \r\n}\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, requiredField, minLengthCreator } from \"../../utils/validators\";\r\nimport { Input } from \"../FormsControls/FormsControls\";\r\n\r\nconst Login = ({loginThunkCreator, isAuth}) => {\r\n\r\n  const onSubmit = (formData) => {\r\n    loginThunkCreator(formData.email, formData.password, formData.rememberMe)\r\n  }\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={\"/profile\"} />\r\n  }\r\n  return (\r\n    <div className=\"d-flex justify-content-end\">\r\n        <div className=\"m-2 card p-2 text-center\">\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nconst maxLength20 = maxLengthCreator(20)\r\nconst minLength4 = minLengthCreator(4)\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <Field \r\n              name={\"email\"} \r\n              placeholder={\"Email\"} \r\n              component={Input}\r\n              validate={[requiredField, maxLength20]}\r\n              />\r\n          </div>\r\n          <div>\r\n            <Field \r\n              name={\"password\"} \r\n              type={\"password\"} \r\n              placeholder={\"Password\"} \r\n              component={Input}\r\n              validate={[requiredField, maxLength20, minLength4]}\r\n              />\r\n          </div>\r\n          {error && <div className=\"formSummaryError\">{error}</div>}\r\n          <div>\r\n            <Field name={\"rememberMe\"} type={\"checkbox\"} component={Input}/> Remember me\r\n          </div>\r\n          <div>\r\n            <button className=\"btn btn-warning btn-block\">Login</button>\r\n          </div>\r\n        </form>\r\n    );\r\n  };\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nexport default Login;\r\n","\r\nimport { connect } from \"react-redux\";\r\nimport { loginThunkCreator, logoutThunkCreator } from \"../../redux/authReducer\";\r\nimport Login from \"./Login\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loginThunkCreator,\r\n  logoutThunkCreator\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"],"sourceRoot":""}