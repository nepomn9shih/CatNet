{"version":3,"sources":["utils/validators.js","components/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/SendMessageForm.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["requiredField","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength","FormControl","input","meta","props","child","hasError","touched","error","className","children","Textarea","restProps","Input","CheckBox","type","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","name","id","userAvatar","src","alt","Message","text","maxLength100","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","messagesPage","dialogs","map","dialog","messages","message","values","sendMessage","compose","dispatch","newMessageBody","sendMessageCreator"],"mappings":"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","file":"static/js/4.874094e8.chunk.js","sourcesContent":["\r\nexport const requiredField = (value) => {\r\n    if (value) return undefined\r\n    return \"error message\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n   return ((value) => {\r\n        if (value && (value.length > maxLength)) return `Max length is ${maxLength} symbols`\r\n        return undefined\r\n    })\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => {\r\n    return ((value) => {\r\n         if (value && (value.length < minLength)) return `Max length is ${minLength} symbols`\r\n         return undefined\r\n     })\r\n }","import React from \"react\";\r\nimport './FormsControls.css'\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    \r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={\"formControl\" + (hasError ? \" error\" : \"\")}>\r\n            <div>\r\n               {props.children}\r\n            </div>\r\n            {hasError && <span>\"{meta.error}\"</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>   \r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>   \r\n}\r\n\r\nexport const CheckBox = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input type=\"checkbox\" {...input} {...restProps}/></FormControl>   \r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsRedirect = (state) => {\r\n    return {\r\n      isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n\r\n    return connectedAuthRedirectComponent\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./DialogItem.css\";\r\n\r\nconst DialogItem = ({ name, id, userAvatar }) => {\r\n  \r\n  return (\r\n    <div className=\"dialog mb-2\">\r\n      <NavLink to={\"/dialogs/\" + id}>\r\n        <div className=\"card bg-light\">\r\n          <div className=\"d-flex justify-content-around flex-wrap\">\r\n            <div className=\"\">\r\n              <img className=\"w-100 rounded\" src={userAvatar} alt=\"userAvatar\" />\r\n            </div>\r\n            <div className=\"p-2\">\r\n            {name}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport \"./Message.css\";\r\n\r\nconst Message = ({ text }) => {\r\n  return <div className=\"m-1 overflowHack\">{text}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, requiredField } from \"../../utils/validators\";\r\nimport { Textarea } from \"../FormsControls/FormsControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst SendMessageForm = (props) => {\r\n    \r\n    return (\r\n        <div className=\"list-group-item bg-light\">\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div className=\"raw\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Field\r\n                            name={\"message\"}\r\n                            component={Textarea}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Напиши сообщение\"\r\n                            validate={[requiredField, maxLength100]}\r\n                        />\r\n                        <div className=\"mt-1\">\r\n                            <button className=\"btn btn-sm btn-warning btn-block\">\r\n                            <b>ADD MESSAGE</b>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'message'})(SendMessageForm)","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport \"./Dialogs.css\";\r\nimport Message from \"./Message/Message\";\r\nimport SendMessageForm from \"./SendMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  \r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.message)\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-4 col-md-3\">\r\n        <div className=\"card bg-dark p-2 m-2\">\r\n          {props.messagesPage.dialogs.map((dialog) => (\r\n            <DialogItem\r\n              name={dialog.name}\r\n              id={dialog.id}\r\n              userAvatar={dialog.userAvatar}\r\n              key={dialog.id}\r\n            />\r\n          ))}\r\n          <button className=\"btn btn-warning btn-sm\">***</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"col\">\r\n        <div className=\"list-group m-2\">\r\n          <div className=\"list-group-item\">\r\n            {props.messagesPage.messages.map((message) => (\r\n              <Message text={message.message} key={message.id} />\r\n            ))}\r\n          </div>\r\n          <SendMessageForm \r\n          onSubmit={addNewMessage}  \r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Dialogs;\r\n","\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { sendMessageCreator} from \"../../redux/messagesReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    messagesPage: state.messagesPage,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n  }  \r\n}\r\n\r\nexport default compose( \r\n  connect(mapStateToProps, mapDispatchToProps), \r\n  withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}